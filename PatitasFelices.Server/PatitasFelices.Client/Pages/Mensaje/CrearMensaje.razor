@page "/Api/Mensaje/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<html>

    <head>
        <title>Mensaje </title>
    </head>

    <body>

        <header>
            <h1>Mensaje </h1>
        </header>

        <main>

            <EditForm Model="mensaje" OnValidSubmit="Grabar">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="TextoComentario">Contenido de mensaje</label>
                    <div>
                        <InputText class="form-control" @bind-Value="mensaje.ContenidoMensaje" />
                        <ValidationMessage For="@(() => mensaje.ContenidoMensaje)" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="TextoComentario">Fecha del mensaje</label>
                    <div>
                        <InputDate class="form-control" @bind-Value="mensaje.FechaHoraMensaje" />
                        <ValidationMessage For="@(() => mensaje.FechaHoraMensaje)" />
                    </div>
                </div>

           

                <button class="btn btn-primary" type="submit">Nuevo mensaje</button>
                <button class="btn btn-secondary" @onclick="Cancelar">Ver lista</button>

            </EditForm>

        </main>

        <footer>
            <p>® Todos los derechos reservados ®</p>
        </footer>

    </body>

</html>

@code {
    private Mensaje mensaje = new Mensaje();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Mensaje>("api/Mensaje", mensaje);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.httpResponseMessage;

            navigationManager.NavigateTo("/Api/ListaMensaje");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/Api/ListaMensaje");
    }
}
